-- Orion Library Universal Compatibility Update with Music System
-- Tüm executor'larda çalışacak şekilde optimize edilmiştir

--[[
Orion Library

MultiSelect Element Kullanımı:
    local MultiSelect = Tab:AddMultiSelect({
        Name = "MultiSelect Örneği",
        Options = {"Seçenek 1", "Seçenek 2", "Seçenek 3"},
        Default = {"Seçenek 1"}, -- Varsayılan seçili değerler (opsiyonel)
        Flag = "multiSelectFlag", -- Flag değeri (opsiyonel)
        Callback = function(Value)
            -- Value bir tablo olarak seçili değerleri içerir
            print("Seçili Değerler:", table.concat(Value, ", "))
        end    
    })

    -- Fonksiyonlar:
    MultiSelect:Refresh(Options, true) -- Seçenekleri günceller (true parametresi mevcut seçimleri temizler)
    MultiSelect:Set({"Seçenek 1", "Seçenek 3"}) -- Seçili değerleri ayarlar

Music System Usage:
    local Window = OrionLib:MakeWindow({
        Name = "My Script Hub",
        Music = true, -- Müzik sistemini etkinleştir
        SaveConfig = true,
        ConfigFolder = "MyScript"
    })
]]

local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local HttpService = game:GetService("HttpService")
local SoundService = game:GetService("SoundService")

-- Music System Variables
local MusicSystem = {
    CurrentSound = nil,
    IsPlaying = false,
    IsPaused = false,
    Volume = 0.5,
    CurrentTrack = nil,
    MusicPanel = nil,
    MusicList = {
        {Name = "VIP Me (a)", ID = "rbxassetid://1838028467"},
        {Name = "Synth Pop Test", ID = "rbxassetid://105726615948239"},
        {Name = "Palm Beach", ID = "rbxassetid://1837196544"},
        {Name = "Gold Digger 30", ID = "rbxassetid://1838489774"},
        {Name = "In the Hall of the Mountain King from Peer Gynt", ID = "rbxassetid://1839900676"},
        {Name = "Pop Happy Birthday (a)", ID = "rbxassetid://9043574701"},
        {Name = "electronic pop beat wOw", ID = "rbxassetid://131329032315407"},
        {Name = "빠른 시일 내에", ID = "rbxassetid://108807600670194"},
        {Name = "Boombox Jazz", ID = "rbxassetid://1842612641"},
        {Name = "Ambient Morning", ID = "rbxassetid://74602284152701"},
        {Name = "Waltz of the Flowers from the Nutcracker (mofit 2)", ID = "rbxassetid://1837626771"},
        {Name = "ネオン可愛いナイツ (Electronic Dance Pop)", ID = "rbxassetid://128641424576072"},
        {Name = "1812 - Remastered", ID = "rbxassetid://1838603000"},
        {Name = "Baby Rap A", ID = "rbxassetid://1847418280"},
        {Name = "Flight of the Bumblebee from The Legend of Tsar Sa", ID = "rbxassetid://1839900537"},
        {Name = "Tripping on Love a", ID = "rbxassetid://1841443579"},
        {Name = "Pop Quiz Panic", ID = "rbxassetid://87765753366758"},
        {Name = "NOVA", ID = "rbxassetid://130502934491426"},
        {Name = "Naruto Fight", ID = "rbxassetid://86726837212164"},
        {Name = "Retro Japan", ID = "rbxassetid://110998912938639"},
        {Name = "Goofy Groove", ID = "rbxassetid://1847418399"},
        {Name = "Bubble Pop Fantasy", ID = "rbxassetid://87543048659957"},
        {Name = "Celebration", ID = "rbxassetid://119930115152566"},
        {Name = "We've Got This! - 60", ID = "rbxassetid://9043707741"},
        {Name = "Sad french pop song in gibberish", ID = "rbxassetid://74109460162201"},
        {Name = "Cookie Pop", ID = "rbxassetid://117139542096095"},
        {Name = "Happy New Year's Day (A)", ID = "rbxassetid://1845962742"},
        {Name = "Big Deal", ID = "rbxassetid://9039954904"},
        {Name = "One Piece Two Piece (a)", ID = "rbxassetid://1838028562"},
        {Name = "Любовь и война", ID = "rbxassetid://104927723714488"},
        {Name = "K-Pop Sensation", ID = "rbxassetid://87456102116246"},
        {Name = "Starlight", ID = "rbxassetid://113655379458641"},
        {Name = "Summer Vibes", ID = "rbxassetid://97382459527414"},
        {Name = "Kawaii Night", ID = "rbxassetid://134092870397437"},
        {Name = "Ring Pop", ID = "rbxassetid://107458644881304"},
        {Name = "Blue Horizons", ID = "rbxassetid://9042466902"},
        {Name = "Fight Of Utsusemi A", ID = "rbxassetid://9047132593"},
        {Name = "Love Heals", ID = "rbxassetid://115634488907886"},
        {Name = "먼저 신뢰하고", ID = "rbxassetid://78695734134326"},
        {Name = "Pink Lemonade a", ID = "rbxassetid://1841425090"},
        {Name = "Close to Me (a)", ID = "rbxassetid://1837767240"},
        {Name = "Moonlit Highway", ID = "rbxassetid://107792494103365"},
        {Name = "Canon in D", ID = "rbxassetid://1839900387"},
        {Name = "It's All Good - 15 - Holiday", ID = "rbxassetid://9043709734"},
        {Name = "POPOLOCAS", ID = "rbxassetid://83857871631870"},
        {Name = "She's So Dumb", ID = "rbxassetid://1836654054"},
        {Name = "Guitar And Synths", ID = "rbxassetid://1839822906"},
        {Name = "Sky High", ID = "rbxassetid://131772967666682"},
        {Name = "Clouds", ID = "rbxassetid://101972127103738"},
        {Name = "Beyond Finance(Pop/Hip Hop type beat)", ID = "rbxassetid://136065112309445"},
        {Name = "Bubblegum Pop", ID = "rbxassetid://132017375846108"},
        {Name = "Trallalero techno pop", ID = "rbxassetid://97954580395417"},
        {Name = "Carmen Suite No. 1 - Marche Du Toreador", ID = "rbxassetid://1837626406"},
        {Name = "Bubble Pop Dance", ID = "rbxassetid://112730584545703"},
        {Name = "Lạc Giữa Mây Trời", ID = "rbxassetid://139318501029364"},
        {Name = "SPEED", ID = "rbxassetid://125550253895893"},
        {Name = "Poppy Playtime Chapter 4 Song (Safe Haven)", ID = "rbxassetid://116811893586509"},
        {Name = "Telling Stories", ID = "rbxassetid://1836966258"},
        {Name = "Tender Soul", ID = "rbxassetid://9039511308"},
        {Name = "Mallow Pop", ID = "rbxassetid://108233049367193"},
        {Name = "ウシとニワトリの夢 (Cow and Chicken's Dream)", ID = "rbxassetid://139551696457205"},
        {Name = "Power Dealers (Kopela)", ID = "rbxassetid://89773168902061"},
        {Name = "Pop (ObbyMania Original Soundtrack)", ID = "rbxassetid://104390773493990"},
        {Name = "Poppin", ID = "rbxassetid://114625988119702"},
        {Name = "Popcorn and Bass", ID = "rbxassetid://110743392385332"},
        {Name = "Power Pop", ID = "rbxassetid://1845334582"},
        {Name = "A Heart Worth Saving", ID = "rbxassetid://1836807218"},
        {Name = "Россия прекрасна с тобой", ID = "rbxassetid://104285488093025"},
        {Name = "Fear of Flying (a)", ID = "rbxassetid://9045886043"},
        {Name = "Pop Pop Bubbles", ID = "rbxassetid://101771177957712"},
        {Name = "Pop Queens unite", ID = "rbxassetid://124968300634417"},
        {Name = "Waltz Of The Flowers", ID = "rbxassetid://1838535855"},
        {Name = "Wild West Frontier", ID = "rbxassetid://1838561243"},
        {Name = "Hindi Na Babalik", ID = "rbxassetid://136272075293473"},
        {Name = "Joseon Disco", ID = "rbxassetid://100733775565785"},
        {Name = "Rave", ID = "rbxassetid://74895943604730"},
        {Name = "Burn It Slow | Celestial Pop 2025", ID = "rbxassetid://134639126144572"},
        {Name = "Rise to the Top (a 10)", ID = "rbxassetid://1837770099"},
        {Name = "Fantastic", ID = "rbxassetid://74023281335616"},
        {Name = "夜の街の記憶 (Memories of the Night City)", ID = "rbxassetid://137844110057836"},
        {Name = "Popcorn Chicken! | Crazy Funny Songs", ID = "rbxassetid://93900262398362"},
        {Name = "Cosmic Boogie", ID = "rbxassetid://73977449730520"},
        {Name = "Shine (a)", ID = "rbxassetid://1842095470"},
        {Name = "Tick-Tock Clock", ID = "rbxassetid://129407760767121"},
        {Name = "Minuet", ID = "rbxassetid://1838443847"},
        {Name = "Japanese March A", ID = "rbxassetid://1845976726"},
        {Name = "Synth Pop Numba-Unfinished Outtake", ID = "rbxassetid://139044563662160"},
        {Name = "Feel the weight of the truth", ID = "rbxassetid://75930259874411"},
        {Name = "TACHY'S INDIE POP", ID = "rbxassetid://117919996774646"},
        {Name = "Hallelujah Chorus from Messiah", ID = "rbxassetid://1837626579"},
        {Name = "Dream Within A Dream A", ID = "rbxassetid://1845976201"},
        {Name = "LUXN", ID = "rbxassetid://89713340598300"},
        {Name = "Muse I am", ID = "rbxassetid://132104798209393"},
        {Name = "Kung Fu A", ID = "rbxassetid://1845973140"},
        {Name = "Popcorn And Cotton Candy", ID = "rbxassetid://110444835143554"},
        {Name = "Trap POP", ID = "rbxassetid://86650118254304"},
        {Name = "Uplifting Synths", ID = "rbxassetid://1839823044"},
        {Name = "this is kinda trippy", ID = "rbxassetid://115513027276441"},
        {Name = "POPLICIOUS", ID = "rbxassetid://136186804633236"},
        {Name = "ジャパン ポップ パンク ロック (Japan Pop Punk Rock)", ID = "rbxassetid://93583858018494"},
        {Name = "Funky (A)", ID = "rbxassetid://1840434670"},
        {Name = "Free Will Funk", ID = "rbxassetid://94378181487716"},
        {Name = "FUNK FESTA", ID = "rbxassetid://103409297553965"},
        {Name = "TOMA FUNK PHONK", ID = "rbxassetid://129098116998483"},
        {Name = "Disco Sapiens", ID = "rbxassetid://1835725225"},
        {Name = "Funky Disco Beats", ID = "rbxassetid://9038367768"},
        {Name = "Saturdays Are Electronic", ID = "rbxassetid://84181008216110"},
        {Name = "The Fun Song (B)", ID = "rbxassetid://1846791777"},
        {Name = "FUNKED TOWN", ID = "rbxassetid://102708912256857"},
        {Name = "BRR BRR PATAPIM", ID = "rbxassetid://83630219580953"},
        {Name = "Funky Disco Beats 15 Second", ID = "rbxassetid://9038367978"},
        {Name = "TUNG SAHUR FUNK", ID = "rbxassetid://81918158487388"},
        {Name = "FUNK DE ULTRA", ID = "rbxassetid://98062475868319"},
        {Name = "Tudo Começou em Marte", ID = "rbxassetid://124928367733395"},
        {Name = "FUNK DA PRAIA", ID = "rbxassetid://89907278904871"},
        {Name = "BRAINROT FUNK!", ID = "rbxassetid://83298925967923"},
        {Name = "FUNK FESTA", ID = "rbxassetid://77874619166101"},
        {Name = "Diagnosis Delight", ID = "rbxassetid://119843716610003"},
        {Name = "Espressora Signora FUNK", ID = "rbxassetid://123394392737234"},
        {Name = "Gettin' Shadow (Main Menu)", ID = "rbxassetid://126935700945530"},
        {Name = "RALLY FUNK", ID = "rbxassetid://90323407842935"},
        {Name = "LABIRINTO DE FUNK", ID = "rbxassetid://88033569921555"},
        {Name = "66 Books", ID = "rbxassetid://113153897515881"},
        {Name = "TOMA FUNK PHONK", ID = "rbxassetid://119665476175239"},
        {Name = "Favela Funk", ID = "rbxassetid://1841682637"},
        {Name = "Better Off Alone (Funk)", ID = "rbxassetid://124383118098366"},
        {Name = "ULTCHILL FUNK (SPED UP) [ELECTRONIC FUNK]", ID = "rbxassetid://85465107863360"},
        {Name = "Bombombini Gusini FUNK", ID = "rbxassetid://92522924032476"},
        {Name = "Chill", ID = "rbxassetid://1839746621"},
        {Name = "GOOD GIRL FUNK (Super Slowed)", ID = "rbxassetid://123723674864058"},
        {Name = "Big Deal", ID = "rbxassetid://9039954904"},
        {Name = "BRAZIL DO FUNK", ID = "rbxassetid://133498554139200"},
        {Name = "Wacky Weekend", ID = "rbxassetid://1837700487"},
        {Name = "funk Do Lunar (Speed up)", ID = "rbxassetid://90844637105538"},
        {Name = "DJ Breaks", ID = "rbxassetid://1836681160"},
        {Name = "Urban Tension", ID = "rbxassetid://121730881611361"},
        {Name = "VEM VEM CHILL FUNK (Sped Up)", ID = "rbxassetid://70870883948497"},
        {Name = "Funky Beats", ID = "rbxassetid://1842627030"},
        {Name = "Funky Challenge", ID = "rbxassetid://9045699801"},
        {Name = "Rio Rage", ID = "rbxassetid://98545708617486"},
        {Name = "Cintura de Ciclone", ID = "rbxassetid://72440232513341"},
        {Name = "I AM STEVE FUNK", ID = "rbxassetid://124822165671476"},
        {Name = "Burbaloni Luliloli FUNK", ID = "rbxassetid://123264865827987"},
        {Name = "freaky funk", ID = "rbxassetid://73140398421340"},
        {Name = "BALLERINA CAPPUCINA FUNK!", ID = "rbxassetid://139295298658283"},
        {Name = "Foreshadow Curse (Cutscene Music)", ID = "rbxassetid://126124374114853"},
        {Name = "MONTAGEM BÉSAME", ID = "rbxassetid://101437908015279"},
        {Name = "Guitar And Synths", ID = "rbxassetid://1839822906"},
        {Name = "NephGatescope", ID = "rbxassetid://93718266216350"},
        {Name = "OLD SWING FUNK", ID = "rbxassetid://140296674808875"},
        {Name = "Waiting Room Groove", ID = "rbxassetid://87788668364550"},
        {Name = "Fisherman", ID = "rbxassetid://120116393621198"},
        {Name = "Funky Battle", ID = "rbxassetid://113109916386013"},
        {Name = "TOMA FUNK PHONK", ID = "rbxassetid://97231051040304"},
        {Name = "BRR BRR PATAPIM FUNK", ID = "rbxassetid://129791536136599"},
        {Name = "Trippi Troppi FUNK", ID = "rbxassetid://72708242743350"},
        {Name = "Bombombini Gusini FUNK", ID = "rbxassetid://77586797807899"},
        {Name = "GOOD GIRL FUNK (Nightcore)", ID = "rbxassetid://116709346800322"},
        {Name = "Asriel", ID = "rbxassetid://88808485680832"},
        {Name = "LIKE THE MOONLIGHT 'FUNKY HOUSE MIX'", ID = "rbxassetid://111560286322896"},
        {Name = "Funky Prime Time", ID = "rbxassetid://9040143305"},
        {Name = "FUNK FESTA", ID = "rbxassetid://139959590610806"},
        {Name = "Fabrique", ID = "rbxassetid://1837625228"},
        {Name = "66 Books (I Know them All)", ID = "rbxassetid://115913843306517"},
        {Name = "Chronic Faith", ID = "rbxassetid://109448018393003"},
        {Name = "Startup", ID = "rbxassetid://104084441597577"},
        {Name = "Dinner", ID = "rbxassetid://73513305146699"},
        {Name = "Lazy Summer", ID = "rbxassetid://1836728864"},
        {Name = "Halloween Funk", ID = "rbxassetid://1841275792"},
        {Name = "BOMBARDINO CROCODILO FUNK 2", ID = "rbxassetid://81287903774850"},
        {Name = "Espressora Signora FUNK", ID = "rbxassetid://73452262373507"},
        {Name = "LUNA BALA FUNK (ULTRA SLWED)", ID = "rbxassetid://112085958492143"},
        {Name = "MY HOTSPOT FUNK 2", ID = "rbxassetid://94301557485291"},
        {Name = "AUTOMOTIVO BRR BRR PATAPIM FUNK", ID = "rbxassetid://93807022050390"},
        {Name = "Funky Town", ID = "rbxassetid://1841067673"},
        {Name = "The Funky Worm A", ID = "rbxassetid://1847690763"},
        {Name = "Uplifting Synths", ID = "rbxassetid://1839823044"},
        {Name = "Funky Rap Beat", ID = "rbxassetid://130352266233702"},
        {Name = "Halloween Funk", ID = "rbxassetid://1841274055"},
        {Name = "BRR BRR PATAPIM", ID = "rbxassetid://81162696431932"},
        {Name = "Jumpstart Riot", ID = "rbxassetid://139150231716894"},
        {Name = "Digitalizing 2 (Friday Night Funkin' x TADC)", ID = "rbxassetid://131979091599810"},
        {Name = "TRALALERO TRALALA 3AM FUNK", ID = "rbxassetid://86895139559166"},
        {Name = "FUNK GARAGE #24", ID = "rbxassetid://109711730507892"},
        {Name = "Letero Funk", ID = "rbxassetid://99409598156364"},
        {Name = "Funkydub h", ID = "rbxassetid://135604017607071"},
        {Name = "GOTH FUNK", ID = "rbxassetid://140704128008979"},
        {Name = "Midnight Trigger", ID = "rbxassetid://136993582402820"},
        {Name = "Sapporo Skyline Drizzle", ID = "rbxassetid://117378755621130"},
        {Name = "FUNK DO EGYPT", ID = "rbxassetid://87968531262747"},
        {Name = "Funk City", ID = "rbxassetid://77897922134512"},
        {Name = "Butterflies", ID = "rbxassetid://114983792198710"},
        {Name = "Through the Fog", ID = "rbxassetid://86550174985678"},
        {Name = "Funky Beat", ID = "rbxassetid://1836444484"},
        {Name = "Frigo Camelo FUNK", ID = "rbxassetid://75999411123639"},
        {Name = "ATMOSPHERIKA FUNK", ID = "rbxassetid://136295506080844"},
        {Name = "Heaven's Eyes", ID = "rbxassetid://91889119300381"},
        {Name = "Brazilian Funk", ID = "rbxassetid://78645304187613"},
        {Name = "Rotation in Colour", ID = "rbxassetid://1836711546"},
        {Name = "DANDY'S WORLD FUNK", ID = "rbxassetid://95646073810749"}
    }
}

-- UISizeConstraint güvenlik fonksiyonu
local function SafeUISizeConstraint(parent, minX, minY, maxX, maxY)
    if maxX < minX then maxX = minX end
    if maxY < minY then maxY = minY end
    
    local constraint = Instance.new("UISizeConstraint")
    constraint.MinSize = Vector2.new(minX, minY)
    constraint.MaxSize = Vector2.new(maxX, maxY)
    constraint.Parent = parent
    return constraint
end

-- ImageButton yardımcı fonksiyonlar
local function HSVtoRGB(h, s, v)
    local r, g, b
    local i = math.floor(h * 6)
    local f = h * 6 - i
    local p = v * (1 - s)
    local q = v * (1 - f * s)
    local t = v * (1 - (1 - f) * s)
    
    i = i % 6
    
    if i == 0 then r, g, b = v, t, p
    elseif i == 1 then r, g, b = q, v, p
    elseif i == 2 then r, g, b = p, v, t
    elseif i == 3 then r, g, b = p, q, v
    elseif i == 4 then r, g, b = t, p, v
    elseif i == 5 then r, g, b = v, p, q
    end
    
    return math.floor(r * 255), math.floor(g * 255), math.floor(b * 255)
end

local function createImageButton(playerGui)
    local screenGui = Instance.new("ScreenGui")
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    screenGui.Parent = playerGui
    
    local imageButton = Instance.new("ImageButton")
    imageButton.BorderSizePixel = 0
    imageButton.ScaleType = Enum.ScaleType.Fit
    imageButton.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    imageButton.Image = "rbxassetid://111073133971859"
    imageButton.Size = UDim2.new(0, 35, 0, 35)
    imageButton.BorderColor3 = Color3.fromRGB(0, 0, 0)
    imageButton.Position = UDim2.new(0.35744, 0, 0.26145, 0)
    imageButton.Parent = screenGui
    
    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = UDim.new(1, 0)
    uiCorner.Parent = imageButton
    
    local uiStroke = Instance.new("UIStroke")
    uiStroke.Parent = imageButton
    
    return imageButton, uiStroke
end

local function setupDragging(guiObject)
    local dragging = false
    local dragStart = nil
    local startPos = nil
    
    local function onInputBegan(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = guiObject.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end
    
    local function onInputChanged(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
            local delta = input.Position - dragStart
            local newPos = UDim2.new(
                startPos.X.Scale, startPos.X.Offset + delta.X,
                startPos.Y.Scale, startPos.Y.Offset + delta.Y
            )
            guiObject.Position = newPos
        end
    end
    
    guiObject.InputBegan:Connect(onInputBegan)
    UserInputService.InputChanged:Connect(onInputChanged)
end

local function setupRainbowStroke(uiStroke)
    local hue = 0
    local hueSpeed = 0.04
    local thicknessMin = 1
    local thicknessMax = 3.5
    local thicknessSpeed = 0.3
    local direction = 1
    
    task.spawn(function()
        while uiStroke.Parent do
            hue = (hue + hueSpeed) % 1
            local r, g, b = HSVtoRGB(hue, 1, 1)
            uiStroke.Color = Color3.fromRGB(r, g, b)
            
            uiStroke.Thickness = uiStroke.Thickness + (thicknessSpeed * direction)
            
            if uiStroke.Thickness >= thicknessMax then
                direction = -1
            elseif uiStroke.Thickness <= thicknessMin then
                direction = 1
            end
            
            task.wait(0.03)
        end
    end)
end

-- Ana kütüphane tanımlaması
local OrionLib = {
    Elements = {},
    ThemeObjects = {},
    Connections = {},
    Flags = {},
    Themes = {
        Default = {
            Main = Color3.fromRGB(18, 18, 18),
            Second = Color3.fromRGB(25, 25, 25),
            Stroke = Color3.fromRGB(50, 50, 50),
            Divider = Color3.fromRGB(50, 50, 50),
            Text = Color3.fromRGB(240, 240, 240),
            TextDark = Color3.fromRGB(140, 140, 140)
        }
    },
    SelectedTheme = "Default",
    Folder = nil,
    SaveCfg = false
}

-- API/Executor Uyumluluk Katmanı
local EXECUTOR_CHECK = {}

EXECUTOR_CHECK.executor = (function()
    local success, result = pcall(function()
        return identifyexecutor and identifyexecutor() or "Unknown"
    end)
    return success and result or "Unknown"
end)()

EXECUTOR_CHECK.functions = {
    isfolder = isfolder or function(path) return false end,
    makefolder = makefolder or function(path) return end,
    isfile = isfile or function(path) return false end,
    writefile = writefile or function(path, content) return end,
    readfile = readfile or function(path) return "" end,
    httpget = game.HttpGet or function(self, url) return "" end
}

-- Core API güvenli erişim
local function GetCoreGui()
    local success, result = pcall(function()
        return game:GetService("CoreGui") or 
               gethui() or 
               game.CoreGui or
               game:GetService("Players").LocalPlayer.PlayerGui
    end)
    
    if success and result then 
        return result 
    else
        return game:GetService("Players").LocalPlayer:FindFirstChildOfClass("PlayerGui")
    end
end

-- getgenv evrensel erişim
getgenv = getgenv or function() return _G end

-- syn evrensel erişim
syn = syn or {}
syn.protect_gui = syn.protect_gui or function(gui) end
syn.unprotect_gui = syn.unprotect_gui or function(gui) end

-- Luraph desteği
if not pcall(function() return readfile end) then
    readfile = function() return "" end
    writefile = function() return end
    isfile = function() return false end
    isfolder = function() return false end
    makefolder = function() return end
end

-- Orion GUI Oluşturma
local Orion = Instance.new("ScreenGui")
Orion.Name = "KanistayLib"
Orion.ResetOnSpawn = false
Orion.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
Orion.DisplayOrder = 999999999

-- Koruma ve parent ayarı
local function SafePlaceGui(gui)
    pcall(function()
        if syn and syn.protect_gui then
            syn.protect_gui(gui)
            gui.Parent = GetCoreGui()
        elseif gethui then
            gui.Parent = gethui()
        else
            gui.Parent = GetCoreGui()
        end
    end)
    
    if not gui.Parent then
        gui.Parent = LocalPlayer.PlayerGui
    end
    
    gui:GetPropertyChangedSignal("Parent"):Connect(function()
        if not gui.Parent then
            pcall(function() SafePlaceGui(gui) end)
        end
    end)
    
    pcall(function()
        for _, Interface in ipairs(gui.Parent:GetChildren()) do
            if Interface.Name == gui.Name and Interface ~= gui then
                Interface:Destroy()
            end
        end
    end)
end

SafePlaceGui(Orion)

-- Orion çalışıyor mu kontrolü
function OrionLib:IsRunning()
    return Orion and Orion.Parent ~= nil
end

-- Güvenli bağlantı oluşturma
local function AddConnection(Signal, Function)
    if not OrionLib:IsRunning() then
        return
    end
    local Connection
    pcall(function()
        Connection = Signal:Connect(Function)
        table.insert(OrionLib.Connections, Connection)
    end)
    return Connection
end

-- Bağlantı temizleme
spawn(function()
    while true do
        if not OrionLib:IsRunning() then
            for _, Connection in next, OrionLib.Connections do
                pcall(function() Connection:Disconnect() end)
            end
            break
        end
        wait(1)
    end
end)

-- Config Okuma/Yazma Fonksiyonları
function SafeJsonEncode(data)
    local success, result = pcall(function()
        return HttpService:JSONEncode(data)
    end)
    return success and result or "{}"
end

function SafeJsonDecode(json)
    local success, result = pcall(function()
        return HttpService:JSONDecode(json)
    end)
    return success and result or {}
end

-- Güvenli config kaydetme
local function SaveCfg(id)
    if not OrionLib.SaveCfg or not OrionLib.Folder then return end
    
    pcall(function()
        if not EXECUTOR_CHECK.functions.isfolder(OrionLib.Folder) then
            EXECUTOR_CHECK.functions.makefolder(OrionLib.Folder)
        end
        
        local Data = {}
        for i, v in pairs(OrionLib.Flags) do
            if v.Save then
                if v.Type == "Colorpicker" then
                    Data[i] = {R = v.Value.R * 255, G = v.Value.G * 255, B = v.Value.B * 255}
                else
                    Data[i] = v.Value
                end
            end
        end
        
        local json = SafeJsonEncode(Data)
        EXECUTOR_CHECK.functions.writefile(OrionLib.Folder .. "/" .. id .. ".txt", json)
    end)
end

-- Güvenli config yükleme
function LoadCfg(config)
    pcall(function()
        local Data = SafeJsonDecode(config)
        for a, b in pairs(Data) do
            if OrionLib.Flags[a] then
                spawn(function() 
                    if OrionLib.Flags[a].Type == "Colorpicker" then
                        OrionLib.Flags[a]:Set(Color3.fromRGB(b.R, b.G, b.B))
                    else
                        OrionLib.Flags[a]:Set(b)
                    end    
                end)
            end
        end
    end)
end

-- Icons
local Icons = {}

-- GetIcon fonksiyonu
local function GetIcon(IconName)
    return Icons[IconName] or nil
end

local WhitelistedMouse = {
    Enum.UserInputType.MouseButton1, 
    Enum.UserInputType.MouseButton2, 
    Enum.UserInputType.MouseButton3
}

local BlacklistedKeys = {
    Enum.KeyCode.Unknown,
    Enum.KeyCode.W,
    Enum.KeyCode.A,
    Enum.KeyCode.S,
    Enum.KeyCode.D,
    Enum.KeyCode.Up,
    Enum.KeyCode.Left,
    Enum.KeyCode.Down,
    Enum.KeyCode.Right,
    Enum.KeyCode.Slash,
    Enum.KeyCode.Tab,
    Enum.KeyCode.Backspace,
    Enum.KeyCode.Escape
}

local function AddDraggingFunctionality(DragPoint, Main)
    local Dragging, DragInput, MousePos, FramePos = false, nil, nil, nil
    
    local function BeginDrag(Input)
        if Input.UserInputType == Enum.UserInputType.MouseButton1 or Input.UserInputType == Enum.UserInputType.Touch then
            Dragging = true
            MousePos = Input.Position
            FramePos = Main.Position
            
            Input.Changed:Connect(function()
                if Input.UserInputState == Enum.UserInputState.End then
                    Dragging = false
                end
            end)
        end
    end
    
    local function UpdateDrag(Input)
        if Dragging and (Input.UserInputType == Enum.UserInputType.MouseMovement or Input.UserInputType == Enum.UserInputType.Touch) then
            DragInput = Input
            local Delta = Input.Position - MousePos
            Main.Position = UDim2.new(FramePos.X.Scale, FramePos.X.Offset + Delta.X, FramePos.Y.Scale, FramePos.Y.Offset + Delta.Y)
        end
    end
    
    pcall(function()
        DragPoint.InputBegan:Connect(BeginDrag)
        UserInputService.InputChanged:Connect(UpdateDrag)
    end)
end   

local function Create(Name, Properties, Children)
    local Object = Instance.new(Name)
    for i, v in next, Properties or {} do
        Object[i] = v
    end
    for i, v in next, Children or {} do
        v.Parent = Object
    end
    return Object
end

-- Yardımcı fonksiyonlar
local function MakeElement(ElementName, ...)
    if ElementName == "Corner" then
        return Create("UICorner", {
            CornerRadius = UDim.new(0, 6)
        })
    elseif ElementName == "Stroke" then
        return Create("UIStroke", {
            Thickness = 1
        })
    elseif ElementName == "List" then
        return Create("UIListLayout", {
            SortOrder = Enum.SortOrder.LayoutOrder,
            Padding = UDim.new(0, 4)
        })
    elseif ElementName == "HorizontalList" then
        return Create("UIListLayout", {
            SortOrder = Enum.SortOrder.LayoutOrder,
            FillDirection = Enum.FillDirection.Horizontal,
            Padding = UDim.new(0, 4)
        })
    elseif ElementName == "Padding" then
        local args = {...}
        return Create("UIPadding", {
            PaddingBottom = UDim.new(0, args[1] or 4),
            PaddingLeft = UDim.new(0, args[2] or 4),
            PaddingRight = UDim.new(0, args[3] or 4),
            PaddingTop = UDim.new(0, args[4] or 4)
        })
    elseif ElementName == "TFrame" then
        return Create("Frame", {
            BackgroundTransparency = 1
        })
    elseif ElementName == "Frame" then
        return Create("Frame")
    elseif ElementName == "RoundFrame" then
        local Frame = Create("Frame", {
            BackgroundColor3 = Color3.fromRGB(30, 30, 30),
            BorderSizePixel = 0
        })
        local Corner = Create("UICorner", {
            CornerRadius = UDim.new(0, 12)
        })
        Corner.Parent = Frame
        SafeUISizeConstraint(Frame, 0, 0, 10000, 10000)
        return Frame
    elseif ElementName == "Button" then
        return Create("TextButton", {
            Text = "",
            AutoButtonColor = false,
            BackgroundTransparency = 1,
            BorderSizePixel = 0
        })
    elseif ElementName == "ScrollFrame" then
        local ScrollFrame = Create("ScrollingFrame", {
            BackgroundTransparency = 1,
            MidImage = "rbxassetid://7445543667",
            BottomImage = "rbxassetid://7445543667",
            TopImage = "rbxassetid://7445543667",
            ScrollBarImageColor3 = ({...})[1],
            BorderSizePixel = 0,
            ScrollBarThickness = ({...})[2],
            CanvasSize = UDim2.new(0, 0, 0, 0)
        })
        SafeUISizeConstraint(ScrollFrame, 0, 0, 10000, 10000)
        return ScrollFrame
    elseif ElementName == "Image" then
        local ImageNew = Create("ImageLabel", {
            Image = ({...})[1],
            BackgroundTransparency = 1
        })
        if GetIcon(({...})[1]) ~= nil then
            ImageNew.Image = GetIcon(({...})[1])
        end
        return ImageNew
    elseif ElementName == "ImageButton" then
        return Create("ImageButton", {
            Image = ({...})[1],
            BackgroundTransparency = 1
        })
    elseif ElementName == "Label" then
        local Label = Create("TextLabel", {
            Text = ({...})[1] or "",
            TextColor3 = Color3.fromRGB(240, 240, 240),
            TextTransparency = ({...})[3] or 0,
            TextSize = ({...})[2] or 15,
            Font = Enum.Font.Gotham,
            RichText = true,
            BackgroundTransparency = 1,
            TextXAlignment = Enum.TextXAlignment.Left
        })
        SafeUISizeConstraint(Label, 0, 0, 10000, 10000)
        return Label
    else
        warn("Element not found: " .. ElementName)
        return Create("Frame", {
            BackgroundTransparency = 1,
            Size = UDim2.new(0, 0, 0, 0)
        })
    end
end

local function SetProps(Element, Props)
    table.foreach(Props, function(Property, Value)
        Element[Property] = Value
    end)
    return Element
end

local function SetChildren(Element, Children)
    table.foreach(Children, function(_, Child)
        Child.Parent = Element
    end)
    return Element
end

local function Round(Number, Factor)
    local Result = math.floor(Number/Factor + (math.sign(Number) * 0.5)) * Factor
    if Result < 0 then Result = Result + Factor end
    return Result
end

local function ReturnProperty(Object)
    if Object:IsA("Frame") or Object:IsA("TextButton") then
        return "BackgroundColor3"
    end 
    if Object:IsA("ScrollingFrame") then
        return "ScrollBarImageColor3"
    end 
    if Object:IsA("UIStroke") then
        return "Color"
    end 
    if Object:IsA("TextLabel") or Object:IsA("TextBox") then
        return "TextColor3"
    end   
    if Object:IsA("ImageLabel") or Object:IsA("ImageButton") then
        return "ImageColor3"
    end   
end

local function AddThemeObject(Object, Type)
    if not OrionLib.ThemeObjects[Type] then
        OrionLib.ThemeObjects[Type] = {}
    end    
    table.insert(OrionLib.ThemeObjects[Type], Object)
    Object[ReturnProperty(Object)] = OrionLib.Themes[OrionLib.SelectedTheme][Type]
    return Object
end    

local function SetTheme()
    for Name, Type in pairs(OrionLib.ThemeObjects) do
        for _, Object in pairs(Type) do
            Object[ReturnProperty(Object)] = OrionLib.Themes[OrionLib.SelectedTheme][Name]
        end    
    end    
end

local function PackColor(Color)
    return {R = Color.R * 255, G = Color.G * 255, B = Color.B * 255}
end    

local function UnpackColor(Color)
    return Color3.fromRGB(Color.R, Color.G, Color.B)
end

local function CheckKey(Table, Key)
    for _, k in next, Table do
        if k == Key then
            return true
        end
    end
    return false
end

-- Notification System
local NotificationHolder = SetProps(SetChildren(MakeElement("TFrame"), {
    SetProps(MakeElement("List"), {
        HorizontalAlignment = Enum.HorizontalAlignment.Center,
        SortOrder = Enum.SortOrder.LayoutOrder,
        VerticalAlignment = Enum.VerticalAlignment.Bottom,
        Padding = UDim.new(0, 5)
    })}), {
    Position = UDim2.new(1, -25, 1, -25),
    Size = UDim2.new(0, 300, 1, -25),
    AnchorPoint = Vector2.new(1, 1),
    Parent = Orion
})

function OrionLib:MakeNotification(NotificationConfig)
    spawn(function()
        NotificationConfig.Name = NotificationConfig.Name or "Notification"
        NotificationConfig.Content = NotificationConfig.Content or "Test"
        NotificationConfig.Image = NotificationConfig.Image or "rbxassetid://4384403532"
        NotificationConfig.Time = NotificationConfig.Time or 15

        local NotificationParent = SetProps(MakeElement("TFrame"), {
            Size = UDim2.new(1, 0, 0, 0),
            AutomaticSize = Enum.AutomaticSize.Y,
            Parent = NotificationHolder
        })

        local NotificationFrame = SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(25, 25, 25), 0, 10), {
            Parent = NotificationParent, 
            Size = UDim2.new(1, 0, 0, 0),
            Position = UDim2.new(1, -55, 0, 0),
            BackgroundTransparency = 0,
            AutomaticSize = Enum.AutomaticSize.Y
        }), {
            MakeElement("Stroke", Color3.fromRGB(93, 93, 93), 1.2),
            MakeElement("Padding", 12, 12, 12, 12),
            SetProps(MakeElement("Image", NotificationConfig.Image), {
                Size = UDim2.new(0, 20, 0, 20),
                ImageColor3 = Color3.fromRGB(240, 240, 240),
                Name = "Icon"
            }),
            SetProps(MakeElement("Label", NotificationConfig.Name, 15), {
                Size = UDim2.new(1, -30, 0, 20),
                Position = UDim2.new(0, 30, 0, 0),
                Font = Enum.Font.GothamBold,
                Name = "Title"
            }),
            SetProps(MakeElement("Label", NotificationConfig.Content, 14), {
                Size = UDim2.new(1, 0, 0, 0),
                Position = UDim2.new(0, 0, 0, 25),
                Font = Enum.Font.GothamSemibold,
                Name = "Content",
                AutomaticSize = Enum.AutomaticSize.Y,
                TextColor3 = Color3.fromRGB(200, 200, 200),
                TextWrapped = true
            })
        })

        TweenService:Create(NotificationFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quint), {Position = UDim2.new(0, 0, 0, 0)}):Play()
        wait(NotificationConfig.Time - 0.88)
        TweenService:Create(NotificationFrame, TweenInfo.new(0.8, Enum.EasingStyle.Quint), {BackgroundTransparency = 0.6}):Play()
        wait(0.35)
        TweenService:Create(NotificationFrame, TweenInfo.new(0.8, Enum.EasingStyle.Quint), {Position = UDim2.new(1, 20, 0, 0)}):Play()
        wait(1.35)
        NotificationFrame:Destroy()
    end)
end    

function OrionLib:Init()
    if OrionLib.SaveCfg then        
        pcall(function()
            if EXECUTOR_CHECK.functions.isfile(OrionLib.Folder .. "/" .. game.GameId .. ".txt") then
                LoadCfg(EXECUTOR_CHECK.functions.readfile(OrionLib.Folder .. "/" .. game.GameId .. ".txt"))
                OrionLib:MakeNotification({
                    Name = "Configuration",
                    Content = "Auto-loaded configuration for the game " .. game.GameId .. ".",
                    Time = 5
                })
            end
        end)        
    end    
end    

-- Online Dot
local function AddOnlineDot(WindowName, MainWindow)
    local TopBar = MainWindow:FindFirstChild("TopBar")
    if not TopBar then return end

    local OnlineDot = Instance.new("Frame")
    OnlineDot.Name = "OnlineDot"
    OnlineDot.Size = UDim2.new(0, 9, 0, 9)
    OnlineDot.Position = UDim2.new(0, 8, 0.4, 0)
    OnlineDot.AnchorPoint = Vector2.new(0, 0.5)
    OnlineDot.BackgroundColor3 = Color3.fromRGB(25, 255, 19)
    OnlineDot.BorderSizePixel = 0
    OnlineDot.Parent = TopBar

    local DotCorner = Instance.new("UICorner")
    DotCorner.CornerRadius = UDim.new(1, 0)
    DotCorner.Parent = OnlineDot

    local DotNeon = Instance.new("UIStroke")
    DotNeon.Thickness = 1.5
    DotNeon.Transparency = 0.1
    DotNeon.Color = Color3.fromRGB(25, 255, 19)
    DotNeon.Parent = OnlineDot
    
    WindowName.Position = UDim2.new(0, 24, 0, -24)
end    

function OrionLib:CreateToggleButton()
    local player = game:GetService("Players").LocalPlayer
    local imageButton, uiStroke = createImageButton(player:WaitForChild("PlayerGui"))
    
    setupDragging(imageButton)
    setupRainbowStroke(uiStroke)
    
    imageButton.MouseButton1Click:Connect(function()
        if Orion then
            Orion.Enabled = true
        end
    end)
    
    if Orion then
        local function updateVisibility()
            imageButton.Parent.Enabled = not Orion.Enabled
        end
        
        updateVisibility()
        Orion:GetPropertyChangedSignal("Enabled"):Connect(updateVisibility)
    end
    
    return imageButton
end

function OrionLib:MakeWindow(WindowConfig)
    local FirstTab = true
    local Minimized = false
    local Loaded = false
    local UIHidden = false

    WindowConfig = WindowConfig or {}
    WindowConfig.Name = WindowConfig.Name or "Orion Library"
    WindowConfig.ConfigFolder = WindowConfig.ConfigFolder or WindowConfig.Name
    WindowConfig.SaveConfig = WindowConfig.SaveConfig or false
    WindowConfig.HidePremium = WindowConfig.HidePremium or false
    WindowConfig.CloseCallback = WindowConfig.CloseCallback or function() end
    WindowConfig.ShowIcon = WindowConfig.ShowIcon or false
    WindowConfig.Icon = WindowConfig.Icon or "rbxassetid://8834748103"
    WindowConfig.Music = WindowConfig.Music or false
    
    OrionLib.Folder = WindowConfig.ConfigFolder
    OrionLib.SaveCfg = WindowConfig.SaveConfig

    if WindowConfig.SaveConfig then
        if not isfolder(WindowConfig.ConfigFolder) then
            makefolder(WindowConfig.ConfigFolder)
        end    
    end

    -- DÜZELME: Yatay Tab Holder
    local TabHolder = AddThemeObject(SetChildren(SetProps(MakeElement("ScrollFrame", Color3.fromRGB(255, 255, 255), 4), {
        Size = UDim2.new(1, 0, 0, 45),
        Position = UDim2.new(0, 0, 0, 40),
        ScrollingDirection = Enum.ScrollingDirection.X,
        CanvasSize = UDim2.new(0, 0, 0, 0)
    }), {
        MakeElement("HorizontalList"),
        MakeElement("Padding", 8, 8, 8, 8)
    }), "Divider")

    -- Tab holder canvas size güncellemesi
    AddConnection(TabHolder.UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"), function()
        TabHolder.CanvasSize = UDim2.new(0, TabHolder.UIListLayout.AbsoluteContentSize.X + 16, 0, 0)
    end)

    -- Close ve Minimize butonları
    local CloseBtn = SetChildren(SetProps(MakeElement("Button"), {
        Size = UDim2.new(0.5, 0, 1, 0),
        Position = UDim2.new(0.5, 0, 0, 0),
        BackgroundTransparency = 1
    }), {
        AddThemeObject(SetProps(MakeElement("Image", "rbxassetid://7072725342"), {
            Position = UDim2.new(0, 9, 0, 6),
            Size = UDim2.new(0, 18, 0, 18)
        }), "Text")
    })

    local MinimizeBtn = SetChildren(SetProps(MakeElement("Button"), {
        Size = UDim2.new(0.5, 0, 1, 0),
        BackgroundTransparency = 1
    }), {
        AddThemeObject(SetProps(MakeElement("Image", "rbxassetid://7072719338"), {
            Position = UDim2.new(0, 9, 0, 6),
            Size = UDim2.new(0, 18, 0, 18),
            Name = "Ico"
        }), "Text")
    })

    local DragPoint = SetProps(MakeElement("TFrame"), {
        Size = UDim2.new(1, 0, 0, 40)
    })

    local WindowName = AddThemeObject(SetProps(MakeElement("Label", WindowConfig.Name, 14), {
        Size = UDim2.new(1, -30, 2, 0),
        Position = UDim2.new(0, 25, 0, -20),
        Font = Enum.Font.GothamBlack,
        TextSize = 20
    }), "Text")

    local WindowTopBarLine = AddThemeObject(SetProps(MakeElement("Frame"), {
        Size = UDim2.new(1, 0, 0, 1),
        Position = UDim2.new(0, 0, 1, -1)
    }), "Stroke")

    local MainWindow = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 22), {
        Parent = Orion,
        Position = UDim2.new(0.5, -307, 0.5, -172),
        Size = UDim2.new(0, 615, 0, 344),
        ClipsDescendants = true
    }), {
        -- Kar efekti container
        SetProps(MakeElement("TFrame"), {
            Size = UDim2.new(1, 0, 1, 0),
            BackgroundTransparency = 1,
            Name = "SnowContainer",
            ZIndex = 9999
        }),
        -- TopBar
        SetChildren(SetProps(MakeElement("TFrame"), {
            Size = UDim2.new(1, 0, 0, 40),
            Name = "TopBar"
        }), {
            WindowName,
            WindowTopBarLine,
            AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 7), {
                Size = UDim2.new(0, WindowConfig.Music and 105 or 70, 0, 30),
                Position = UDim2.new(1, WindowConfig.Music and -125 or -90, 0, 5)
            }), {
                AddThemeObject(MakeElement("Stroke"), "Stroke"),
                AddThemeObject(SetProps(MakeElement("Frame"), {
                    Size = UDim2.new(0, 1, 1, 0),
                    Position = UDim2.new(0.5, 0, 0, 0)
                }), "Stroke"), 
                CloseBtn,
                MinimizeBtn
            }), "Second"), 
        }),
        DragPoint,
        TabHolder
    }), "Main")

    -- Stroking ve efektler
    local MainStroke = Instance.new("UIStroke")
    MainStroke.Thickness = 4.0
    MainStroke.Color = Color3.fromRGB(255, 255, 255)
    MainStroke.Transparency = 0.1
    MainStroke.Parent = MainWindow
    
    -- Kanistay HUB yazısı
    local KanistayLabel = Instance.new("TextLabel")
    KanistayLabel.Name = "KanistayLabel"
    KanistayLabel.Size = UDim2.new(0, 32, 0, 120)
    KanistayLabel.BackgroundTransparency = 1
    KanistayLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    KanistayLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    KanistayLabel.Font = Enum.Font.GothamBlack
    KanistayLabel.TextSize = 18
    KanistayLabel.Text = "Kanistay Hub"
    KanistayLabel.TextXAlignment = Enum.TextXAlignment.Center
    KanistayLabel.TextYAlignment = Enum.TextYAlignment.Center
    KanistayLabel.Rotation = -90
    KanistayLabel.ZIndex = 9999
    KanistayLabel.Visible = true
    KanistayLabel.Parent = Orion
    KanistayLabel.Position = KanistayLabel.Position + UDim2.new(0, 3, 0, 0)
    
    -- Label pozisyon güncellemesi
    RunService.RenderStepped:Connect(function()
        pcall(function()
            if MainWindow and MainWindow.Parent and KanistayLabel and KanistayLabel.Parent then
                local pos = MainWindow.AbsolutePosition
                local size = MainWindow.AbsoluteSize
                KanistayLabel.Position = UDim2.new(0, pos.X - KanistayLabel.Size.X.Offset - 8, 0, pos.Y + size.Y/2 - KanistayLabel.Size.Y.Offset/2)
            end
        end)
    end)
    
    -- Yanıp sönme efekti
    spawn(function()
        local visible = true
        while wait(0.8) do
            if MainWindow and MainWindow.Parent then
                visible = not visible
                if KanistayLabel and KanistayLabel.Parent then
                    KanistayLabel.TextTransparency = visible and 0.2 or 1.0
                end
            else
                break
            end
        end
    end)
    
    -- Dönen efekt
    local RotatingHighlight = Instance.new("UIGradient")
    RotatingHighlight.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)),
        ColorSequenceKeypoint.new(0.3, Color3.fromRGB(255, 255, 255)),
        ColorSequenceKeypoint.new(0.5, Color3.fromRGB(255, 255, 255)),
        ColorSequenceKeypoint.new(0.7, Color3.fromRGB(255, 255, 255)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 255, 255))
    })
    RotatingHighlight.Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 0.8),
        NumberSequenceKeypoint.new(0.3, 0.6),
        NumberSequenceKeypoint.new(0.5, 0.2),
        NumberSequenceKeypoint.new(0.7, 0.6),
        NumberSequenceKeypoint.new(1, 0.8)
    })
    RotatingHighlight.Parent = MainStroke
    
    spawn(function()
        local rot = 0
        while wait(0.02) do
            if MainStroke and MainStroke.Parent then
                rot = (rot + 1) % 360
                if RotatingHighlight and RotatingHighlight.Parent then
                    RotatingHighlight.Rotation = rot
                end
            end
        end
    end)

    if WindowConfig.ShowIcon then
        WindowName.Position = UDim2.new(0, 50, 0, -20)
        local WindowIcon = SetProps(MakeElement("Image", WindowConfig.Icon), {
            Size = UDim2.new(0, 20, 0, 20),
            Position = UDim2.new(0, 25, 0, 10)
        })
        WindowIcon.Parent = MainWindow.TopBar
    end    

    AddDraggingFunctionality(DragPoint, MainWindow)

    AddConnection(CloseBtn.MouseButton1Up, function()
        Orion.Enabled = false
        WindowConfig.CloseCallback()
    end)

    -- Kar efekti
    local function CreateSnowEffect()
        local SnowContainer = MainWindow:FindFirstChild("SnowContainer")
        if not SnowContainer then return end

        local maxSnowflakes = 12
        local snowflakes = {}
        local lastSnowflakeTime = tick()
        local minSpawnInterval = 0.35

        local function createSnowflake()
            if #snowflakes >= maxSnowflakes then return end

            local size = math.random(2, 4)
            local speed = math.random(18, 28) / 1000
            local amplitude = math.random(3, 10) / 100
            local frequency = math.random(5, 12) / 10
            local opacity = math.random(20, 60) / 100
            local startX = math.random()

            local snowflake = Instance.new("Frame")
            snowflake.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            snowflake.BorderSizePixel = 0
            snowflake.Size = UDim2.new(0, size, 0, size)
            snowflake.Position = UDim2.new(startX, 0, -0.05, 0)
            snowflake.BackgroundTransparency = 1 - opacity
            snowflake.ZIndex = 10000

            local corner = Instance.new("UICorner")
            corner.CornerRadius = UDim.new(1, 0)
            corner.Parent = snowflake

            snowflake.Parent = SnowContainer

            table.insert(snowflakes, {
                frame = snowflake,
                size = size,
                speed = speed,
                amplitude = amplitude,
                frequency = frequency,
                startX = startX,
                startTime = tick(),
                phase = math.random() * math.pi * 2
            })
        end

        RunService.RenderStepped:Connect(function()
            if not MainWindow or not MainWindow.Parent then return end

            if #snowflakes < maxSnowflakes and (tick() - lastSnowflakeTime) > minSpawnInterval then
                createSnowflake()
                lastSnowflakeTime = tick()
            end

            for i = #snowflakes, 1, -1 do
                local s = snowflakes[i]
                local elapsed = tick() - s.startTime
                local y = -0.05 + elapsed * s.speed
                local x = s.startX + math.sin(elapsed * s.frequency + s.phase) * s.amplitude

                if s.frame and s.frame.Parent then
                    s.frame.Position = UDim2.new(x, 0, y, 0)

                    if y > 0.8 then
                        s.frame.BackgroundTransparency = math.clamp((y-0.8)*2 + (1-s.frame.BackgroundTransparency), 0, 1)
                    end

                    if y > 1 then
                        s.frame:Destroy()
                        table.remove(snowflakes, i)
                    end
                end
            end
        end)
    end
    
    CreateSnowEffect()

    -- Button Container
    local ButtonContainer = Instance.new("Frame")
    ButtonContainer.Name = "ButtonContainer"
    ButtonContainer.Size = UDim2.new(0, 22, 0, 22)
    ButtonContainer.BackgroundTransparency = 1
    ButtonContainer.Visible = true
    ButtonContainer.ZIndex = 10000
    ButtonContainer.Position = UDim2.new(0, 15, 1, -90)
    ButtonContainer.Parent = Orion
    
    local PlusBtn = Instance.new("TextButton")
    PlusBtn.Name = "PlusBtn"
    PlusBtn.Size = UDim2.new(1, 0, 1, 0)
    PlusBtn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    PlusBtn.BackgroundTransparency = 0.1
    PlusBtn.Text = "+"
    PlusBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
    PlusBtn.Font = Enum.Font.GothamBold
    PlusBtn.TextSize = 14
    PlusBtn.ZIndex = 10001
    PlusBtn.Parent = ButtonContainer
    
    local PlusCorner = Instance.new("UICorner")
    PlusCorner.CornerRadius = UDim.new(1, 0)
    PlusCorner.Parent = PlusBtn

    local function syncVisibility()
        if ButtonContainer and KanistayLabel then
            KanistayLabel.Visible = ButtonContainer.Visible
        end
    end
    
    ButtonContainer:GetPropertyChangedSignal("Visible"):Connect(syncVisibility)
    syncVisibility()

    OrionLib:CreateToggleButton()

    AddConnection(MinimizeBtn.MouseButton1Up, function()
        if Minimized then
            TweenService:Create(MainWindow, TweenInfo.new(0.5, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, 615, 0, 344)}):Play()
            MinimizeBtn.Ico.Image = "rbxassetid://7072719338"
            wait(.02)
            MainWindow.ClipsDescendants = false
            TabHolder.Visible = true
            WindowTopBarLine.Visible = true
            if ButtonContainer then ButtonContainer.Visible = true end
        else
            MainWindow.ClipsDescendants = true
            WindowTopBarLine.Visible = false
            MinimizeBtn.Ico.Image = "rbxassetid://7072720870"
            WindowName.Text = WindowName.Text
            
            local titleWidth = WindowName.TextBounds.X
            local bufferSpace = 140
            if WindowConfig.Music then
                bufferSpace = bufferSpace + 45
            end
            local minimizedWidth = math.max(titleWidth + bufferSpace, 280)
            
            TabHolder.Visible = false
            if ButtonContainer then ButtonContainer.Visible = false end
            
            TweenService:Create(MainWindow, TweenInfo.new(0.5, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Size = UDim2.new(0, minimizedWidth, 0, 40)}):Play()
        end
        
        Minimized = not Minimized
    end)

    -- Slider Panel
    local SliderPanel = Instance.new("Frame")
    SliderPanel.Name = "SliderPanel"
    SliderPanel.Size = UDim2.new(0, 280, 0, 120)
    SliderPanel.BackgroundColor3 = Color3.fromRGB(24,24,24)
    SliderPanel.BackgroundTransparency = 0.1
    SliderPanel.Position = UDim2.new(0.5, -140, 1, -140)
    SliderPanel.AnchorPoint = Vector2.new(0, 0)
    SliderPanel.Visible = false
    SliderPanel.ZIndex = 11
    SliderPanel.Parent = Orion

    local PanelCorner = Instance.new("UICorner")
    PanelCorner.CornerRadius = UDim.new(0, 12)
    PanelCorner.Parent = SliderPanel
    
    local CloseButton = Instance.new("TextButton")
    CloseButton.Name = "CloseButton"
    CloseButton.Size = UDim2.new(0, 24, 0, 24)
    CloseButton.Position = UDim2.new(1, -30, 0, 6)
    CloseButton.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    CloseButton.BackgroundTransparency = 0.3
    CloseButton.Text = "✖"
    CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloseButton.Font = Enum.Font.GothamBold
    CloseButton.TextSize = 14
    CloseButton.ZIndex = 12
    CloseButton.Parent = SliderPanel
    
    local CloseCorner = Instance.new("UICorner")
    CloseCorner.CornerRadius = UDim.new(1, 0)
    CloseCorner.Parent = CloseButton
    
    CloseButton.MouseButton1Click:Connect(function()
        SliderPanel.Visible = false
    end)
    
    CloseButton.MouseEnter:Connect(function()
        TweenService:Create(CloseButton, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {
            BackgroundColor3 = Color3.fromRGB(255, 80, 80),
            TextColor3 = Color3.fromRGB(255, 255, 255)
        }):Play()
    end)
    
    CloseButton.MouseLeave:Connect(function()
        TweenService:Create(CloseButton, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {
            BackgroundColor3 = Color3.fromRGB(40, 40, 40),
            TextColor3 = Color3.fromRGB(255, 255, 255)
        }):Play()
    end)
    
    PlusBtn.MouseButton1Click:Connect(function()
        if SliderPanel then
            SliderPanel.Visible = not SliderPanel.Visible
            
            if SliderPanel.Visible then
                for _, child in pairs(SliderPanel:GetChildren()) do
                    if child:IsA("TextLabel") or child:IsA("TextButton") or child:IsA("Frame") then
                        child.Visible = true
                        
                        if child:IsA("Frame") or child:IsA("TextButton") then
                            for _, subChild in pairs(child:GetChildren()) do
                                if subChild:IsA("TextLabel") or subChild:IsA("Frame") then
                                    subChild.Visible = true
                                end
                            end
                        end
                    end
                end
            end
        end
    end)
    
    PlusBtn.MouseEnter:Connect(function()
        TweenService:Create(PlusBtn, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {
            BackgroundColor3 = Color3.fromRGB(50, 50, 50),
            TextColor3 = Color3.fromRGB(255, 255, 255)
        }):Play()
    end)
    
    PlusBtn.MouseLeave:Connect(function()
        TweenService:Create(PlusBtn, TweenInfo.new(0.3, Enum.EasingStyle.Quint), {
            BackgroundColor3 = Color3.fromRGB(30, 30, 30),
            TextColor3 = Color3.fromRGB(255, 255, 255)
        }):Play()
    end)

    -- Pozisyon güncelleme
    RunService.RenderStepped:Connect(function()
        pcall(function()
            if MainWindow and MainWindow.Parent and ButtonContainer and ButtonContainer.Parent then
                local pos = MainWindow.AbsolutePosition
                local size = MainWindow.AbsoluteSize
                ButtonContainer.Position = UDim2.new(0, pos.X - 5, 0, pos.Y + size.Y - 25)
            end
            
            if MainWindow then
                for _, v in pairs(MainWindow:GetChildren()) do
                    if v.Name == "ItemContainer" and MainWindow:FindFirstChild("TopBar") then
                        pcall(function()
                            local topOffset = 85 + 2
                            
                            v.Size = UDim2.new(1, 0, 1, -topOffset)
                            v.Position = UDim2.new(0, 0, 0, topOffset)
                            
                            if v:FindFirstChild("UIListLayout") and v.Visible then
                                local contentHeight = v.UIListLayout.AbsoluteContentSize.Y + 30
                                local visibleHeight = v.AbsoluteSize.Y
                                v.CanvasSize = UDim2.new(0, 0, 0, contentHeight)
                                
                                if contentHeight < visibleHeight then
                                    v.CanvasSize = UDim2.new(0, 0, 0, visibleHeight)
                                end
                            end
                        end)
                    end
                end
            end
        end)
    end)

    AddOnlineDot(WindowName, MainWindow)

    local TabFunction = {}

    function TabFunction:MakeTab(TabConfig)
        TabConfig = TabConfig or {}
        TabConfig.Name = TabConfig.Name or "Tab"
        TabConfig.Icon = TabConfig.Icon or ""
        TabConfig.PremiumOnly = TabConfig.PremiumOnly or false

        -- DÜZELME: Yatay Tab Frame
        local TabFrame = SetChildren(SetProps(MakeElement("Button"), {
            Size = UDim2.new(0, 0, 1, 0),
            AutomaticSize = Enum.AutomaticSize.X,
            Parent = TabHolder
        }), {
            AddThemeObject(SetProps(MakeElement("Image", TabConfig.Icon), {
                AnchorPoint = Vector2.new(0, 0.5),
                Size = UDim2.new(0, 16, 0, 16),
                Position = UDim2.new(0, 8, 0.5, 0),
                ImageTransparency = 0.4,
                Name = "Ico"
            }), "Text"),
            AddThemeObject(SetProps(MakeElement("Label", TabConfig.Name, 13), {
                Size = UDim2.new(0, 0, 1, 0),
                Position = UDim2.new(0, 28, 0, 0),
                Font = Enum.Font.GothamSemibold,
                TextTransparency = 0.4,
                AutomaticSize = Enum.AutomaticSize.X,
                Name = "Title"
            }), "Text"),
            MakeElement("Padding", 0, 8, 8, 0)
        })

        -- Tab genişliği hesaplama
        spawn(function()
            wait()
            local titleWidth = TabFrame.Title.TextBounds.X
            local totalWidth = 28 + titleWidth + 16
            TabFrame.Size = UDim2.new(0, totalWidth, 1, 0)
        end)

        if GetIcon(TabConfig.Icon) ~= nil then
            TabFrame.Ico.Image = GetIcon(TabConfig.Icon)
        end    

        -- Item Container
        local Container = AddThemeObject(SetChildren(SetProps(MakeElement("ScrollFrame", Color3.fromRGB(255, 255, 255), 4), {
            Size = UDim2.new(1, 0, 1, -87),
            Position = UDim2.new(0, 0, 0, 87),
            Visible = FirstTab,
            Name = "ItemContainer"
        }), {
            MakeElement("List", 0, 4),
            MakeElement("Padding", 15, 15, 15, 15)
        }), "Divider")

        Container.Parent = MainWindow

        AddConnection(Container.UIListLayout:GetPropertyChangedSignal("AbsoluteContentSize"), function()
            Container.CanvasSize = UDim2.new(0, 0, 0, Container.UIListLayout.AbsoluteContentSize.Y + 30)
        end)

        AddConnection(TabFrame.MouseButton1Up, function()
            for _, v in next, MainWindow:GetChildren() do
                if v.Name == "ItemContainer" then
                    v.Visible = false
                end
            end
            Container.Visible = true

            for _, v in next, TabHolder:GetChildren() do
                if v:IsA("TextButton") then
                    v.Ico.ImageTransparency = 0.4
                    v.Title.TextTransparency = 0.4
                end
            end
            TabFrame.Ico.ImageTransparency = 0
            TabFrame.Title.TextTransparency = 0
        end)

        if FirstTab then
            TabFrame.Ico.ImageTransparency = 0
            TabFrame.Title.TextTransparency = 0
            FirstTab = false
        end

        local ElementFunction = {}

        function ElementFunction:AddButton(ButtonConfig)
            ButtonConfig = ButtonConfig or {}
            ButtonConfig.Name = ButtonConfig.Name or "Button"
            ButtonConfig.Callback = ButtonConfig.Callback or function() end

            local ButtonFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame"), {
                Size = UDim2.new(1, 0, 0, 40),
                Parent = Container
            }), {
                AddThemeObject(MakeElement("Stroke"), "Stroke"),
                SetChildren(SetProps(MakeElement("Button"), {
                    Size = UDim2.new(1, 0, 1, 0)
                }), {
                    AddThemeObject(SetProps(MakeElement("Label", ButtonConfig.Name, 14), {
                        Size = UDim2.new(1, -20, 1, 0),
                        Position = UDim2.new(0, 20, 0, 0),
                        Font = Enum.Font.GothamSemibold
                    }), "Text")
                })
            }), "Second")

            AddConnection(ButtonFrame.TextButton.MouseButton1Up, function()
                spawn(function() ButtonConfig.Callback() end)
            end)

            return ButtonFrame
        end

        function ElementFunction:AddToggle(ToggleConfig)
            ToggleConfig = ToggleConfig or {}
            ToggleConfig.Name = ToggleConfig.Name or "Toggle"
            ToggleConfig.Default = ToggleConfig.Default or false
            ToggleConfig.Flag = ToggleConfig.Flag or nil
            ToggleConfig.Save = ToggleConfig.Save or true
            ToggleConfig.Callback = ToggleConfig.Callback or function() end

            local ToggleFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame"), {
                Size = UDim2.new(1, 0, 0, 40),
                Parent = Container
            }), {
                AddThemeObject(MakeElement("Stroke"), "Stroke"),
                SetChildren(SetProps(MakeElement("Button"), {
                    Size = UDim2.new(1, 0, 1, 0)
                }), {
                    AddThemeObject(SetProps(MakeElement("Label", ToggleConfig.Name, 14), {
                        Size = UDim2.new(1, -50, 1, 0),
                        Position = UDim2.new(0, 20, 0, 0),
                        Font = Enum.Font.GothamSemibold
                    }), "Text"),
                    SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 12), {
                        Size = UDim2.new(0, 40, 0, 20),
                        Position = UDim2.new(1, -50, 0.5, -10),
                        Name = "ToggleOuter"
                    }), {
                        AddThemeObject(MakeElement("Stroke"), "Stroke"),
                        SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 10), {
                            Size = UDim2.new(0, 18, 0, 18),
                            Position = UDim2.new(0, 1, 0, 1),
                            Name = "ToggleInner"
                        })
                    })
                })
            }), "Second")

            local ToggleOuter = ToggleFrame.TextButton.ToggleOuter
            local ToggleInner = ToggleOuter.ToggleInner
            local Toggled = ToggleConfig.Default

            local function SetToggle(Bool)
                Toggled = Bool
                if Bool then
                    TweenService:Create(ToggleInner, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Position = UDim2.new(1, -19, 0, 1), BackgroundColor3 = Color3.fromRGB(0, 162, 255)}):Play()
                    TweenService:Create(ToggleOuter, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(0, 162, 255)}):Play()
                else
                    TweenService:Create(ToggleInner, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {Position = UDim2.new(0, 1, 0, 1), BackgroundColor3 = Color3.fromRGB(255, 255, 255)}):Play()
                    TweenService:Create(ToggleOuter, TweenInfo.new(0.25, Enum.EasingStyle.Quint, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(255, 255, 255)}):Play()
                end
                spawn(function() ToggleConfig.Callback(Bool) end)
            end

            AddConnection(ToggleFrame.TextButton.MouseButton1Up, function()
                SetToggle(not Toggled)
            end)

            if ToggleConfig.Flag then
                OrionLib.Flags[ToggleConfig.Flag] = {
                    Value = ToggleConfig.Default,
                    Type = "Toggle",
                    Set = SetToggle,
                    Save = ToggleConfig.Save
                }
            end

            SetToggle(ToggleConfig.Default)

            local ToggleFunction = {}
            function ToggleFunction:Set(Bool)
                SetToggle(Bool)
            end

            return ToggleFunction
        end

        function ElementFunction:AddSlider(SliderConfig)
            SliderConfig = SliderConfig or {}
            SliderConfig.Name = SliderConfig.Name or "Slider"
            SliderConfig.Min = SliderConfig.Min or 0
            SliderConfig.Max = SliderConfig.Max or 100
            SliderConfig.Default = SliderConfig.Default or 50
            SliderConfig.Increment = SliderConfig.Increment or 1
            SliderConfig.ValueName = SliderConfig.ValueName or ""
            SliderConfig.Flag = SliderConfig.Flag or nil
            SliderConfig.Save = SliderConfig.Save or true
            SliderConfig.Callback = SliderConfig.Callback or function() end

            local SliderFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame"), {
                Size = UDim2.new(1, 0, 0, 50),
                Parent = Container
            }), {
                AddThemeObject(MakeElement("Stroke"), "Stroke"),
                AddThemeObject(SetProps(MakeElement("Label", SliderConfig.Name, 14), {
                    Size = UDim2.new(1, -20, 0, 20),
                    Position = UDim2.new(0, 20, 0, 5),
                    Font = Enum.Font.GothamSemibold
                }), "Text"),
                AddThemeObject(SetProps(MakeElement("Label", SliderConfig.Default .. SliderConfig.ValueName, 13), {
                    Size = UDim2.new(1, -20, 0, 20),
                    Position = UDim2.new(0, 20, 0, 25),
                    Font = Enum.Font.Gotham,
                    Name = "ValueLabel"
                }), "TextDark"),
                SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 3), {
                    Size = UDim2.new(1, -40, 0, 6),
                    Position = UDim2.new(0, 20, 1, -15),
                    Name = "SliderBack"
                }), {
                    AddThemeObject(MakeElement("Stroke"), "Stroke"),
                    SetProps(MakeElement("RoundFrame", Color3.fromRGB(0, 162, 255), 0, 3), {
                        Size = UDim2.new(0.5, 0, 1, 0),
                        Name = "SliderFill"
                    }),
                    SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 8), {
                        Size = UDim2.new(0, 16, 0, 16),
                        Position = UDim2.new(0.5, -8, 0.5, -8),
                        Name = "SliderKnob"
                    })
                })
            }), "Second")

            local SliderBack = SliderFrame.SliderBack
            local SliderFill = SliderBack.SliderFill
            local SliderKnob = SliderBack.SliderKnob
            local ValueLabel = SliderFrame.ValueLabel

            local SliderValue = SliderConfig.Default
            local Dragging = false

            local function SetSlider(Value)
                SliderValue = math.clamp(Round(Value, SliderConfig.Increment), SliderConfig.Min, SliderConfig.Max)
                local Percent = (SliderValue - SliderConfig.Min) / (SliderConfig.Max - SliderConfig.Min)
                
                SliderFill.Size = UDim2.new(Percent, 0, 1, 0)
                SliderKnob.Position = UDim2.new(Percent, -8, 0.5, -8)
                ValueLabel.Text = SliderValue .. SliderConfig.ValueName
                
                spawn(function() SliderConfig.Callback(SliderValue) end)
            end

            AddConnection(SliderKnob.InputBegan, function(Input)
                if Input.UserInputType == Enum.UserInputType.MouseButton1 then
                    Dragging = true
                end
            end)

            AddConnection(SliderKnob.InputEnded, function(Input)
                if Input.UserInputType == Enum.UserInputType.MouseButton1 then
                    Dragging = false
                end
            end)

            AddConnection(UserInputService.InputChanged, function(Input)
                if Dragging and Input.UserInputType == Enum.UserInputType.MouseMovement then
                    local SizeX = SliderBack.AbsoluteSize.X
                    local Percent = math.clamp((Input.Position.X - SliderBack.AbsolutePosition.X) / SizeX, 0, 1)
                    local Value = SliderConfig.Min + ((SliderConfig.Max - SliderConfig.Min) * Percent)
                    SetSlider(Value)
                end
            end)

            if SliderConfig.Flag then
                OrionLib.Flags[SliderConfig.Flag] = {
                    Value = SliderConfig.Default,
                    Type = "Slider",
                    Set = SetSlider,
                    Save = SliderConfig.Save
                }
            end

            SetSlider(SliderConfig.Default)

            local SliderFunction = {}
            function SliderFunction:Set(Value)
                SetSlider(Value)
            end

            return SliderFunction
        end

        function ElementFunction:AddDropdown(DropdownConfig)
            DropdownConfig = DropdownConfig or {}
            DropdownConfig.Name = DropdownConfig.Name or "Dropdown"
            DropdownConfig.Options = DropdownConfig.Options or {}
            DropdownConfig.Default = DropdownConfig.Default or ""
            DropdownConfig.Flag = DropdownConfig.Flag or nil
            DropdownConfig.Save = DropdownConfig.Save or true
            DropdownConfig.Callback = DropdownConfig.Callback or function() end

            local DropdownFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame"), {
                Size = UDim2.new(1, 0, 0, 40),
                Parent = Container,
                ClipsDescendants = true
            }), {
                AddThemeObject(MakeElement("Stroke"), "Stroke"),
                SetChildren(SetProps(MakeElement("Button"), {
                    Size = UDim2.new(1, 0, 0, 40)
                }), {
                    AddThemeObject(SetProps(MakeElement("Label", DropdownConfig.Name, 14), {
                        Size = UDim2.new(1, -50, 1, 0),
                        Position = UDim2.new(0, 20, 0, 0),
                        Font = Enum.Font.GothamSemibold
                    }), "Text"),
                    AddThemeObject(SetProps(MakeElement("Label", DropdownConfig.Default, 13), {
                        Size = UDim2.new(1, -50, 1, 0),
                        Position = UDim2.new(0, 20, 0, 0),
                        Font = Enum.Font.Gotham,
                        TextXAlignment = Enum.TextXAlignment.Right,
                        Name = "ValueLabel"
                    }), "TextDark"),
                    AddThemeObject(SetProps(MakeElement("Image", "rbxassetid://7072706796"), {
                        Size = UDim2.new(0, 16, 0, 16),
                        Position = UDim2.new(1, -30, 0.5, -8),
                        Name = "Arrow"
                    }), "Text")
                }),
                SetChildren(SetProps(MakeElement("ScrollFrame", Color3.fromRGB(255, 255, 255), 4), {
                    Size = UDim2.new(1, 0, 0, 0),
                    Position = UDim2.new(0, 0, 0, 40),
                    Name = "DropdownContainer"
                }), {
                    MakeElement("List", 0, 0),
                    MakeElement("Padding", 0, 0, 0, 0)
                })
            }), "Second")

            local DropdownContainer = DropdownFrame.DropdownContainer
            local ValueLabel = DropdownFrame.TextButton.ValueLabel
            local Arrow = DropdownFrame.TextButton.Arrow

            local DropdownValue = DropdownConfig.Default
            local Opened = false

            local function SetDropdown(Value)
                DropdownValue = Value
                ValueLabel.Text = Value
                spawn(function() DropdownConfig.Callback(Value) end)
            end

            local function RefreshDropdown(Options, SetValue)
                for _, v in next, DropdownContainer:GetChildren() do
                    if v:IsA("TextButton") then
                        v:Destroy()
                    end
                end

                for _, Option in next, Options do
                    local OptionButton = AddThemeObject(SetChildren(SetProps(MakeElement("Button"), {
                        Size = UDim2.new(1, 0, 0, 30),
                        Parent = DropdownContainer
                    }), {
                        AddThemeObject(SetProps(MakeElement("Label", Option, 13), {
                            Size = UDim2.new(1, -20, 1, 0),
                            Position = UDim2.new(0, 20, 0, 0),
                            Font = Enum.Font.Gotham
                        }), "Text")
                    }), "Second")

                    AddConnection(OptionButton.MouseButton1Up, function()
                        SetDropdown(Option)
                        
                        Opened = false
                        TweenService:Create(DropdownFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint), {Size = UDim2.new(1, 0, 0, 40)}):Play()
                        TweenService:Create(DropdownContainer, TweenInfo.new(0.25, Enum.EasingStyle.Quint), {Size = UDim2.new(1, 0, 0, 0)}):Play()
                        TweenService:Create(Arrow, TweenInfo.new(0.25, Enum.EasingStyle.Quint), {Rotation = 0}):Play()
                    end)
                end

                DropdownContainer.CanvasSize = UDim2.new(0, 0, 0, DropdownContainer.UIListLayout.AbsoluteContentSize.Y)

                if SetValue then
                    SetDropdown(Options[1] or "")
                end
            end

            AddConnection(DropdownFrame.TextButton.MouseButton1Up, function()
                if Opened then
                    Opened = false
                    TweenService:Create(DropdownFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint), {Size = UDim2.new(1, 0, 0, 40)}):Play()
                    TweenService:Create(DropdownContainer, TweenInfo.new(0.25, Enum.EasingStyle.Quint), {Size = UDim2.new(1, 0, 0, 0)}):Play()
                    TweenService:Create(Arrow, TweenInfo.new(0.25, Enum.EasingStyle.Quint), {Rotation = 0}):Play()
                else
                    Opened = true
                    local DropdownHeight = math.clamp(DropdownContainer.UIListLayout.AbsoluteContentSize.Y, 0, 120)
                    TweenService:Create(DropdownFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint), {Size = UDim2.new(1, 0, 0, 40 + DropdownHeight)}):Play()
                    TweenService:Create(DropdownContainer, TweenInfo.new(0.25, Enum.EasingStyle.Quint), {Size = UDim2.new(1, 0, 0, DropdownHeight)}):Play()
                    TweenService:Create(Arrow, TweenInfo.new(0.25, Enum.EasingStyle.Quint), {Rotation = 180}):Play()
                end
            end)

            if DropdownConfig.Flag then
                OrionLib.Flags[DropdownConfig.Flag] = {
                    Value = DropdownConfig.Default,
                    Type = "Dropdown",
                    Set = SetDropdown,
                    Refresh = RefreshDropdown,
                    Save = DropdownConfig.Save
                }
            end

            RefreshDropdown(DropdownConfig.Options, true)

            local DropdownFunction = {}
            function DropdownFunction:Set(Value)
                SetDropdown(Value)
            end
            function DropdownFunction:Refresh(Options, SetValue)
                RefreshDropdown(Options, SetValue)
            end

            return DropdownFunction
        end

        function ElementFunction:AddColorpicker(ColorpickerConfig)
            ColorpickerConfig = ColorpickerConfig or {}
            ColorpickerConfig.Name = ColorpickerConfig.Name or "Colorpicker"
            ColorpickerConfig.Default = ColorpickerConfig.Default or Color3.fromRGB(255, 255, 255)
            ColorpickerConfig.Flag = ColorpickerConfig.Flag or nil
            ColorpickerConfig.Save = ColorpickerConfig.Save or true
            ColorpickerConfig.Callback = ColorpickerConfig.Callback or function() end

            local ColorpickerFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame"), {
                Size = UDim2.new(1, 0, 0, 40),
                Parent = Container
            }), {
                AddThemeObject(MakeElement("Stroke"), "Stroke"),
                SetChildren(SetProps(MakeElement("Button"), {
                    Size = UDim2.new(1, 0, 1, 0)
                }), {
                    AddThemeObject(SetProps(MakeElement("Label", ColorpickerConfig.Name, 14), {
                        Size = UDim2.new(1, -50, 1, 0),
                        Position = UDim2.new(0, 20, 0, 0),
                        Font = Enum.Font.GothamSemibold
                    }), "Text"),
                    SetProps(MakeElement("RoundFrame", ColorpickerConfig.Default, 0, 6), {
                        Size = UDim2.new(0, 30, 0, 20),
                        Position = UDim2.new(1, -40, 0.5, -10),
                        Name = "ColorDisplay"
                    })
                })
            }), "Second")

            local ColorDisplay = ColorpickerFrame.TextButton.ColorDisplay
            local ColorValue = ColorpickerConfig.Default

            local function SetColor(Color)
                ColorValue = Color
                ColorDisplay.BackgroundColor3 = Color
                spawn(function() ColorpickerConfig.Callback(Color) end)
            end

            AddConnection(ColorpickerFrame.TextButton.MouseButton1Up, function()
                local Colors = {
                    Color3.fromRGB(255, 0, 0),
                    Color3.fromRGB(0, 255, 0),
                    Color3.fromRGB(0, 0, 255),
                    Color3.fromRGB(255, 255, 0),
                    Color3.fromRGB(255, 0, 255),
                    Color3.fromRGB(0, 255, 255),
                    Color3.fromRGB(255, 255, 255)
                }
                
                local CurrentIndex = 1
                for i, Color in ipairs(Colors) do
                    if Color == ColorValue then
                        CurrentIndex = i
                        break
                    end
                end
                
                local NextIndex = (CurrentIndex % #Colors) + 1
                SetColor(Colors[NextIndex])
            end)

            if ColorpickerConfig.Flag then
                OrionLib.Flags[ColorpickerConfig.Flag] = {
                    Value = ColorpickerConfig.Default,
                    Type = "Colorpicker",
                    Set = SetColor,
                    Save = ColorpickerConfig.Save
                }
            end

            local ColorpickerFunction = {}
            function ColorpickerFunction:Set(Color)
                SetColor(Color)
            end

            return ColorpickerFunction
        end

        function ElementFunction:AddTextbox(TextboxConfig)
            TextboxConfig = TextboxConfig or {}
            TextboxConfig.Name = TextboxConfig.Name or "Textbox"
            TextboxConfig.Default = TextboxConfig.Default or ""
            TextboxConfig.TextDisappear = TextboxConfig.TextDisappear or false
            TextboxConfig.Flag = TextboxConfig.Flag or nil
            TextboxConfig.Save = TextboxConfig.Save or true
            TextboxConfig.Callback = TextboxConfig.Callback or function() end

            local TextboxFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame"), {
                Size = UDim2.new(1, 0, 0, 40),
                Parent = Container
            }), {
                AddThemeObject(MakeElement("Stroke"), "Stroke"),
                AddThemeObject(SetProps(MakeElement("Label", TextboxConfig.Name, 14), {
                    Size = UDim2.new(0.5, -10, 1, 0),
                    Position = UDim2.new(0, 20, 0, 0),
                    Font = Enum.Font.GothamSemibold
                }), "Text"),
                AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 6), {
                    Size = UDim2.new(0.5, -10, 0, 25),
                    Position = UDim2.new(0.5, 5, 0.5, -12.5),
                    Name = "TextboxBack"
                }), {
                    AddThemeObject(MakeElement("Stroke"), "Stroke"),
                    SetProps(Create("TextBox", {
                        Size = UDim2.new(1, -10, 1, 0),
                        Position = UDim2.new(0, 5, 0, 0),
                        BackgroundTransparency = 1,
                        Text = TextboxConfig.Default,
                        TextSize = 13,
                        Font = Enum.Font.Gotham,
                        PlaceholderText = "Enter text...",
                        ClearTextOnFocus = TextboxConfig.TextDisappear,
                        Name = "Textbox"
                    }), {})
                }), "Second")
            }), "Second")

            local Textbox = TextboxFrame.TextboxBack.Textbox
            AddThemeObject(Textbox, "Text")

            local function SetTextbox(Text)
                Textbox.Text = Text
                spawn(function() TextboxConfig.Callback(Text) end)
            end

            AddConnection(Textbox.FocusLost, function(EnterPressed)
                if EnterPressed then
                    SetTextbox(Textbox.Text)
                end
            end)

            if TextboxConfig.Flag then
                OrionLib.Flags[TextboxConfig.Flag] = {
                    Value = TextboxConfig.Default,
                    Type = "Textbox",
                    Set = SetTextbox,
                    Save = TextboxConfig.Save
                }
            end

            local TextboxFunction = {}
            function TextboxFunction:Set(Text)
                SetTextbox(Text)
            end

            return TextboxFunction
        end

        function ElementFunction:AddBind(BindConfig)
            BindConfig = BindConfig or {}
            BindConfig.Name = BindConfig.Name or "Bind"
            BindConfig.Default = BindConfig.Default or Enum.KeyCode.E
            BindConfig.Hold = BindConfig.Hold or false
            BindConfig.Flag = BindConfig.Flag or nil
            BindConfig.Save = BindConfig.Save or true
            BindConfig.Callback = BindConfig.Callback or function() end

            local BindFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame"), {
                Size = UDim2.new(1, 0, 0, 40),
                Parent = Container
            }), {
                AddThemeObject(MakeElement("Stroke"), "Stroke"),
                SetChildren(SetProps(MakeElement("Button"), {
                    Size = UDim2.new(1, 0, 1, 0)
                }), {
                    AddThemeObject(SetProps(MakeElement("Label", BindConfig.Name, 14), {
                        Size = UDim2.new(1, -100, 1, 0),
                        Position = UDim2.new(0, 20, 0, 0),
                        Font = Enum.Font.GothamSemibold
                    }), "Text"),
                    AddThemeObject(SetProps(MakeElement("Label", "[" .. BindConfig.Default.Name .. "]", 13), {
                        Size = UDim2.new(0, 80, 1, 0),
                        Position = UDim2.new(1, -90, 0, 0),
                        Font = Enum.Font.Gotham,
                        TextXAlignment = Enum.TextXAlignment.Right,
                        Name = "BindLabel"
                    }), "TextDark")
                })
            }), "Second")

            local BindLabel = BindFrame.TextButton.BindLabel
            local CurrentBind = BindConfig.Default
            local Binding = false

            local function SetBind(Key)
                CurrentBind = Key
                BindLabel.Text = "[" .. Key.Name .. "]"
            end

            AddConnection(BindFrame.TextButton.MouseButton1Up, function()
                if not Binding then
                    Binding = true
                    BindLabel.Text = "[...]"
                    
                    local Connection
                    Connection = AddConnection(UserInputService.InputBegan, function(Input, GameProcessed)
                        if not GameProcessed then
                            if not CheckKey(BlacklistedKeys, Input.KeyCode) then
                                SetBind(Input.KeyCode)
                                Binding = false
                                Connection:Disconnect()
                            end
                        end
                    end)
                end
            end)

            AddConnection(UserInputService.InputBegan, function(Input, GameProcessed)
                if not GameProcessed and Input.KeyCode == CurrentBind then
                    if BindConfig.Hold then
                        spawn(function() BindConfig.Callback(true) end)
                    else
                        spawn(function() BindConfig.Callback() end)
                    end
                end
            end)

            if BindConfig.Hold then
                AddConnection(UserInputService.InputEnded, function(Input, GameProcessed)
                    if not GameProcessed and Input.KeyCode == CurrentBind then
                        spawn(function() BindConfig.Callback(false) end)
                    end
                end)
            end

            if BindConfig.Flag then
                OrionLib.Flags[BindConfig.Flag] = {
                    Value = BindConfig.Default,
                    Type = "Bind",
                    Set = SetBind,
                    Save = BindConfig.Save
                }
            end

            local BindFunction = {}
            function BindFunction:Set(Key)
                SetBind(Key)
            end

            return BindFunction
        end

        function ElementFunction:AddLabel(LabelConfig)
            LabelConfig = LabelConfig or {}
            LabelConfig.Name = LabelConfig.Name or "Label"

            local LabelFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame"), {
                Size = UDim2.new(1, 0, 0, 40),
                Parent = Container
            }), {
                AddThemeObject(MakeElement("Stroke"), "Stroke"),
                AddThemeObject(SetProps(MakeElement("Label", LabelConfig.Name, 14), {
                    Size = UDim2.new(1, -20, 1, 0),
                    Position = UDim2.new(0, 20, 0, 0),
                    Font = Enum.Font.GothamSemibold,
                    Name = "LabelText"
                }), "Text")
            }), "Second")

            local LabelText = LabelFrame.LabelText

            local LabelFunction = {}
            function LabelFunction:Set(Text)
                LabelText.Text = Text
            end

            return LabelFunction
        end

        function ElementFunction:AddParagraph(ParagraphConfig)
            ParagraphConfig = ParagraphConfig or {}
            ParagraphConfig.Title = ParagraphConfig.Title or "Paragraph"
            ParagraphConfig.Content = ParagraphConfig.Content or "Content"

            local ParagraphFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame"), {
                Size = UDim2.new(1, 0, 0, 60),
                Parent = Container
            }), {
                AddThemeObject(MakeElement("Stroke"), "Stroke"),
                AddThemeObject(SetProps(MakeElement("Label", ParagraphConfig.Title, 14), {
                    Size = UDim2.new(1, -20, 0, 20),
                    Position = UDim2.new(0, 20, 0, 5),
                    Font = Enum.Font.GothamSemibold,
                    Name = "Title"
                }), "Text"),
                AddThemeObject(SetProps(MakeElement("Label", ParagraphConfig.Content, 13), {
                    Size = UDim2.new(1, -20, 0, 30),
                    Position = UDim2.new(0, 20, 0, 25),
                    Font = Enum.Font.Gotham,
                    TextWrapped = true,
                    Name = "Content"
                }), "TextDark")
            }), "Second")

            local Title = ParagraphFrame.Title
            local Content = ParagraphFrame.Content

            local ParagraphFunction = {}
            function ParagraphFunction:Set(TitleText, ContentText)
                Title.Text = TitleText
                Content.Text = ContentText
            end

            return ParagraphFunction
        end

        function ElementFunction:AddMultiSelect(MultiSelectConfig)
            MultiSelectConfig = MultiSelectConfig or {}
            MultiSelectConfig.Name = MultiSelectConfig.Name or "MultiSelect"
            MultiSelectConfig.Options = MultiSelectConfig.Options or {}
            MultiSelectConfig.Default = MultiSelectConfig.Default or {}
            MultiSelectConfig.Flag = MultiSelectConfig.Flag or nil
            MultiSelectConfig.Save = MultiSelectConfig.Save or true
            MultiSelectConfig.Callback = MultiSelectConfig.Callback or function() end

            local MultiSelectFrame = AddThemeObject(SetChildren(SetProps(MakeElement("RoundFrame"), {
                Size = UDim2.new(1, 0, 0, 40),
                Parent = Container,
                ClipsDescendants = true
            }), {
                AddThemeObject(MakeElement("Stroke"), "Stroke"),
                SetChildren(SetProps(MakeElement("Button"), {
                    Size = UDim2.new(1, 0, 0, 40)
                }), {
                    AddThemeObject(SetProps(MakeElement("Label", MultiSelectConfig.Name, 14), {
                        Size = UDim2.new(1, -50, 1, 0),
                        Position = UDim2.new(0, 20, 0, 0),
                        Font = Enum.Font.GothamSemibold
                    }), "Text"),
                    AddThemeObject(SetProps(MakeElement("Label", "None", 13), {
                        Size = UDim2.new(1, -50, 1, 0),
                        Position = UDim2.new(0, 20, 0, 0),
                        Font = Enum.Font.Gotham,
                        TextXAlignment = Enum.TextXAlignment.Right,
                        Name = "ValueLabel"
                    }), "TextDark"),
                    AddThemeObject(SetProps(MakeElement("Image", "rbxassetid://7072706796"), {
                        Size = UDim2.new(0, 16, 0, 16),
                        Position = UDim2.new(1, -30, 0.5, -8),
                        Name = "Arrow"
                    }), "Text")
                }),
                SetChildren(SetProps(MakeElement("ScrollFrame", Color3.fromRGB(255, 255, 255), 4), {
                    Size = UDim2.new(1, 0, 0, 0),
                    Position = UDim2.new(0, 0, 0, 40),
                    Name = "MultiSelectContainer"
                }), {
                    MakeElement("List", 0, 0),
                    MakeElement("Padding", 0, 0, 0, 0)
                })
            }), "Second")

            local MultiSelectContainer = MultiSelectFrame.MultiSelectContainer
            local ValueLabel = MultiSelectFrame.TextButton.ValueLabel
            local Arrow = MultiSelectFrame.TextButton.Arrow

            local SelectedValues = {}
            local Opened = false

            for _, value in ipairs(MultiSelectConfig.Default) do
                SelectedValues[value] = true
            end

            local function UpdateValueLabel()
                local selectedList = {}
                for value, selected in pairs(SelectedValues) do
                    if selected then
                        table.insert(selectedList, value)
                    end
                end
                
                if #selectedList == 0 then
                    ValueLabel.Text = "None"
                elseif #selectedList == 1 then
                    ValueLabel.Text = selectedList[1]
                else
                    ValueLabel.Text = #selectedList .. " selected"
                end
            end

            local function SetMultiSelect(Values)
                SelectedValues = {}
                for _, value in ipairs(Values) do
                    SelectedValues[value] = true
                end
                UpdateValueLabel()
                spawn(function() MultiSelectConfig.Callback(Values) end)
            end

            local function RefreshMultiSelect(Options, ClearSelection)
                for _, v in next, MultiSelectContainer:GetChildren() do
                    if v:IsA("TextButton") then
                        v:Destroy()
                    end
                end

                if ClearSelection then
                    SelectedValues = {}
                end

                for _, Option in next, Options do
                    local OptionButton = AddThemeObject(SetChildren(SetProps(MakeElement("Button"), {
                        Size = UDim2.new(1, 0, 0, 30),
                        Parent = MultiSelectContainer
                    }), {
                        AddThemeObject(SetProps(MakeElement("Label", Option, 13), {
                            Size = UDim2.new(1, -40, 1, 0),
                            Position = UDim2.new(0, 20, 0, 0),
                            Font = Enum.Font.Gotham
                        }), "Text"),
                        SetProps(MakeElement("RoundFrame", Color3.fromRGB(255, 255, 255), 0, 3), {
                            Size = UDim2.new(0, 16, 0, 16),
                            Position = UDim2.new(1, -30, 0.5, -8),
                            Name = "Checkbox"
                        })
                    }), "Second")

                    local Checkbox = OptionButton.Checkbox
                    local CheckboxStroke = AddThemeObject(MakeElement("Stroke"), "Stroke")
                    CheckboxStroke.Parent = Checkbox

                    local Checkmark = AddThemeObject(SetProps(MakeElement("Label", "✓", 12), {
                        Size = UDim2.new(1, 0, 1, 0),
                        BackgroundTransparency = 1,
                        Font = Enum.Font.GothamBold,
                        TextXAlignment = Enum.TextXAlignment.Center,
                        TextYAlignment = Enum.TextYAlignment.Center,
                        Visible = SelectedValues[Option] or false
                    }), "Text")
                    Checkmark.Parent = Checkbox

                    local function UpdateCheckbox()
                        if SelectedValues[Option] then
                            Checkbox.BackgroundColor3 = Color3.fromRGB(0, 162, 255)
                            Checkmark.Visible = true
                        else
                            Checkbox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                            Checkmark.Visible = false
                        end
                    end

                    UpdateCheckbox()

                    AddConnection(OptionButton.MouseButton1Up, function()
                        SelectedValues[Option] = not SelectedValues[Option]
                        UpdateCheckbox()
                        UpdateValueLabel()
                        
                        local currentSelected = {}
                        for value, selected in pairs(SelectedValues) do
                            if selected then
                                table.insert(currentSelected, value)
                            end
                        end
                        
                        spawn(function() MultiSelectConfig.Callback(currentSelected) end)
                    end)
                end

                MultiSelectContainer.CanvasSize = UDim2.new(0, 0, 0, MultiSelectContainer.UIListLayout.AbsoluteContentSize.Y)
                UpdateValueLabel()
            end

            AddConnection(MultiSelectFrame.TextButton.MouseButton1Up, function()
                if Opened then
                    Opened = false
                    TweenService:Create(MultiSelectFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint), {Size = UDim2.new(1, 0, 0, 40)}):Play()
                    TweenService:Create(MultiSelectContainer, TweenInfo.new(0.25, Enum.EasingStyle.Quint), {Size = UDim2.new(1, 0, 0, 0)}):Play()
                    TweenService:Create(Arrow, TweenInfo.new(0.25, Enum.EasingStyle.Quint), {Rotation = 0}):Play()
                else
                    Opened = true
                    local MultiSelectHeight = math.clamp(MultiSelectContainer.UIListLayout.AbsoluteContentSize.Y, 0, 120)
                    TweenService:Create(MultiSelectFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quint), {Size = UDim2.new(1, 0, 0, 40 + MultiSelectHeight)}):Play()
                    TweenService:Create(MultiSelectContainer, TweenInfo.new(0.25, Enum.EasingStyle.Quint), {Size = UDim2.new(1, 0, 0, MultiSelectHeight)}):Play()
                    TweenService:Create(Arrow, TweenInfo.new(0.25, Enum.EasingStyle.Quint), {Rotation = 180}):Play()
                end
            end)

            if MultiSelectConfig.Flag then
                OrionLib.Flags[MultiSelectConfig.Flag] = {
                    Value = MultiSelectConfig.Default,
                    Type = "MultiSelect",
                    Set = SetMultiSelect,
                    Refresh = RefreshMultiSelect,
                    Save = MultiSelectConfig.Save
                }
            end

            RefreshMultiSelect(MultiSelectConfig.Options, false)

            local MultiSelectFunction = {}
            function MultiSelectFunction:Set(Values)
                SetMultiSelect(Values)
            end
            function MultiSelectFunction:Refresh(Options, ClearSelection)
                RefreshMultiSelect(Options, ClearSelection)
            end

            return MultiSelectFunction
        end

        return ElementFunction
    end

    return TabFunction
end

function OrionLib:Destroy()
    Orion:Destroy()
end

function OrionLib:SetTheme(ThemeName)
    if OrionLib.Themes[ThemeName] then
        OrionLib.SelectedTheme = ThemeName
        SetTheme()
    end
end

OrionLib:Init()

return OrionLib
